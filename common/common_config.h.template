#ifndef common_config_h
#define common_config_h

/***************************************************************************
 * Defines configurable values that are used by the entire MW backbone
 * comms system. Do not include this file directly; rather it is to be
 * included indirectly via message_types.h or xen_keystore_defs.h.
 *
 * To preserve changes, edit common_config.h.template
 **************************************************************************/

#ifndef _common_config_defined
#  error "This file should not be included directly"
#endif

//
// Number of grant refs (1/page). This determines how much space we
// have for our ring buffer. For instance, if the order is 6, we share
// 2^6 = 64 (0x40) pages, or 0x40000 bytes. The max we've tried is
// 6. Xen has an upper limit on how many pages can be shared. That
// limit can be configured by a Xen boot parameter - specifically look
// at gnttab_max_frames.
//

#define XENEVENT_GRANT_REF_ORDER  6 // (2^order == page count)

//
// The items we're sharing on the ring buffer are big and we want to
// make the best use of the ring buffer. Optimize our sizes so we can
// maximize the number of slots available. We make use of ring.h in
// these calculations.
//
// The offset of the first element in shared memory on x86_64 is
//
//   4 * sizeof(unsigned long) + 48 = 0n80 = 0x50
//
// So, provided we'll have at least 80 slots, we can re-appropriate 1
// byte from each slot to the shared ring header. Depending on
// application implementation, this could have the drawback of
// generating lots of small messages. Research further to see if this
// is how we should do things.
//

// Useful sizes to consider:
//  mt_request_base_t: 0x18
//  non-buffer portion of mt_response_socket_recvfrom_t: 0x3a

// If we decide to increase the message size, bump up
// MESSAGE_TARGET_MAX_SIZE to the next power of 2 to make the best use
// of shared memory.

//#define MESSAGE_TARGET_MAX_SIZE 0x400 // 1024
#define MESSAGE_TARGET_MAX_SIZE 0x800 // 2048

#define MESSAGE_TYPE_MAX_PAYLOAD_LEN (MESSAGE_TARGET_MAX_SIZE - 0x3a - 1)


#endif //common_config_h
