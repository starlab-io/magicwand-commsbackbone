##
## To preserve changes to Makefile, edit Makefile.template
## See also: utils/mw_prep
##
## THIS MAKEFILE IS THE ONE THE UP-CHAIN DEVELOPERS (OUR CONSUMERS)
## WILL USE. IT MUST BUILD PRODUCTION-READY BINARIES.
##

# Standard no-strings-attached compilation of the test TCP/IP app and
# its accompanying shared library.  The shared library preloads the
# app and intercepts selected TCP/IP calls to the network stack.
# 

CC = gcc
CFLAGS = -Wall -fPIC -DPIC -std=gnu99 -Wno-missing-braces
CFLAGS += -I.. -I../../../common -I../../common -I../../../exports/imports
CFLAGS += -ggdb
CFLAGS += -DLOG_LEVEL=LOG_ERROR
#CFLAGS += -DMYDEBUG
#CFLAGS += -DMYTRAP
#CFLAGS +=  -DDEVLOG

#enable ftrace trace_markers for shim shared object
#CFLAGS += -DENABLE_TRACING


# Some programs use "check" versions of certain libc functions, which
# we may have to wrap for proper exection (since they may contain
# inline syscalls). For instance, nc.openbsd uses __read_chk, which
# calls syscall directly on Ubuntu 14.04. The drawback of wrapping the
# functions is that we do not perform the overflow checking that they
# were intended to do. Uncomment to wrap check functions.
CFLAGS += -DWRAP_CHECK_FUNCTIONS

LD = ld
LDFLAGS = -ggdb -shared
LIBS = -lpthread

PRE_LOAD_LIB_NAME=tcp_ip_wrapper

all: $(PRE_LOAD_LIB_NAME).so

$(PRE_LOAD_LIB_NAME).so: tcp_ip_wrapper.o logging.o trace-marker.o
	$(LD) $(LDFLAGS) $^ -o $@ -ldl

%.o : %.c
	$(CC) -c $(CFLAGS) $< -o $@

clean:
	rm -f $(TCP_IP_APP_NAME) $(PRE_LOAD_LIB_NAME).o $(PRE_LOAD_LIB_NAME).so logging.o trace-marker.o
